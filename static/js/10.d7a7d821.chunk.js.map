{"version":3,"sources":["modules/movies/SingleMovie/styles.js","modules/movies/SingleMovie/MovieSummary.jsx","modules/movies/SingleMovie/RatingSection/SingleReviewStyles.js","modules/movies/SingleMovie/RatingSection/SingleReview.jsx","modules/movies/SingleMovie/RatingSection/styles.js","modules/movies/SingleMovie/RatingSection/RateDialog.tsx","modules/movies/SingleMovie/RatingSection/index.jsx","modules/movies/SingleMovie/SimilarMovies/styles.js","modules/movies/SingleMovie/SimilarMovies/index.jsx","modules/movies/SingleMovie/MovieGenres/styles.js","modules/movies/SingleMovie/MovieGenres/index.jsx","modules/movies/SingleMovie/MovieCast/styles.js","modules/movies/SingleMovie/MovieCast/index.jsx","modules/movies/SingleMovie/index.jsx","pages/SingleMoviePage/index.jsx"],"names":["SingleMovieWrapper","styled","div","$oneColumn","props","fadeIn","MovieTitle","theme","onSurface","MovieVideoContainer","StyledMovieSummary","CardTitle","h3","SummaryCard","Card","onSurfaceMD","summary","oneColumn","isEmpty","length","StyledSingleReview","disabled","AuthorsName","p","ReviewContent","ReviewRating","Rating","BaseImageStyle","css","AuthorImage","img","$fadeIn","OwnImage","ProfileImage","DateCreated","SingleReview","review","comment","userRating","username","profileImage","createdTime","isOwn","fakePromise","useFakePromise","useState","userImage","setUserImage","useEffect","Promise","race","ResourcesAPI","fetchResource","IMAGE_BASE_PATH","getResourcePromise","then","res","console","group","log","groupEnd","data","require","title","onClick","shape","src","alt","rating","maxStars","starSize","color","Intl","DateTimeFormat","year","month","day","format","StyledRatingSection","ReviewsContainer","RateMovieBtn","NoReviewsText","RateDialogWrapper","lessThen","$device","L","RateDialogTitle","RateDialogActions","RateDialogAction","Button","RateDialogInput","Input","RateDialog","device","useDeviceDimensions","inputType","withCharacterCount","label","helperText","type","onCancel","onConfirm","selector","createSelector","store","moviesReducer","selectedMovie","reviews","reviewsLoading","movieInfo","movieRating","auth","loggedInUser","isLoggedIn","userId","RatingSection","movieName","movieId","dispatch","useDispatch","useSelector","sortedReviews","setSortedReviews","getReviewsByMovie","isUserRated","ownReview","filter","r","restReviews","useMemo","some","rate","a","rateMovie","error","message","enqueueSnackbarMessage","useColor","isLoading","id","rateable","onRate","openDialog","closeDialog","doRate","map","index","key","SimilarMoviesContainer","MoreMoviesTitle","Movies","MovieLink","Link","MovieName","h4","MoviePoster","SimilarMovies","similarMovies","setSimilarMovies","MovieAPI","getSimilarMovies","posterName","to","API_URL","GenresContainer","GenresCard","MovieGenres","genres","genre","selectable","chipType","chipText","closeable","CastContainer","CastCard","CastSection","section","CastSectionTitle","primary","MovieCast","actors","director","actor","style","marginBottom","BASE_POSTER_URL","withRouter","params","match","history","prevGenres","React","useRef","current","screenWidth","width","isSingleColumn","filters","previousGenres","updateFilter","movieGenres","clearSingleMovie","fetchSingleMovie","movieSummary","directorName","actorNames","movieYear","movieViews","height","controls","poster","MovieSummary","SingleMoviePage"],"mappings":"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","file":"static/js/10.d7a7d821.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { Button } from 'components/basic';\nimport { DEFAULT_Z_INDEX } from 'config/zIndexes';\nimport {\n  transitionDurations,\n  transitionFunctions,\n} from 'config/animationConstants';\nimport { applyShadow } from 'utils/colorUtils';\nimport { Card } from 'components';\n\n\nexport const SingleMovieWrapper = styled.div`\n  position: relative;\n  display: grid;\n  grid-template-columns: ${({ $oneColumn }) => $oneColumn ? `auto` : 'minmax(280px, 30%) auto'};\n  grid-template-rows: min-content min-content;\n  grid-auto-rows: min-content;\n  grid-gap: 20px;\n  \n  width: ${({ $oneColumn }) => $oneColumn ? 'min-content' : '95vw'};\n  margin: auto;\n  padding-bottom: 50px;\n  \n  opacity: 0;\n  ${props => props.fadeIn && `\n    opacity: 1;\n    transition: opacity 200ms;\n  `}\n`;\n\nexport const MovieTitle = styled.div`\n  grid-area: 1 / 1 / 1 / -1;\n  text-align: center;\n  font-family: 'Marck script', cursive;\n  font-size: 2rem;\n  font-weight: bold;\n  \n  letter-spacing: 0.15rem;\n  \n  color: ${props => props.theme.onSurface};\n  margin-bottom: 20px;\n  ${props => props.$oneColumn && `\n    font-size: 1.8rem;\n  `};\n`;\n\nexport const MovieVideoContainer = styled.div`\n  grid-area: 2 / 2 / 3 / -1;\n  ${props => props.$oneColumn && `\n    grid-area: 2 / 1 / 3 / -1;\n  `};\n  text-align: center;\n  \n  max-width: 100%;\n  & > video {\n    object-fit: fill;\n  }\n`;\n\nexport const StyledMovieSummary = styled.div`\n  grid-area: 3 / 1 / 4 / -1;\n  ${({ $oneColumn }) => $oneColumn && `\n    grid-area: 4 / 1 / 5 / -1;\n  `};\n  position: relative;\n  width: 100%;\n  max-height: 300px;\n  margin: 10px 0;\n  font-family: 'Roboto', sans-serif;\n`;\n\nexport const CardTitle = styled.h3`\n  text-align: left;\n  color: ${props => props.theme.onSurface};\n  margin-bottom: 10px;\n  font-size: 1.1rem;\n`;\n\nexport const SummaryCard = styled(Card)`\n  position: relative;\n  text-align: justify;\n  font-size: 1rem;\n  letter-spacing: .6px;\n  line-height: 1.4rem;\n  max-height: 280px;\n  \n  color: ${props => props.theme.onSurfaceMD};\n`;","import React, { useState, useEffect, useRef } from 'react';\nimport useDeviceDimensions from 'hooks/useDeviceDimensions';\nimport { SummaryCard, StyledMovieSummary, CardTitle } from './styles';\n\nconst BIG_SUMMARY_THRESHOLD = 600;\nconst DEFAULT_TEXT = 'No summary available';\nexport default ({ summary = '', oneColumn }) => {\n  \n  const isEmpty = summary.length === 0;\n\n  return (\n    <StyledMovieSummary\n      $oneColumn={oneColumn}\n    >\n      <CardTitle>{isEmpty ? DEFAULT_TEXT : `Summary:`}</CardTitle>\n      <SummaryCard>\n        {summary}\n      </SummaryCard>\n    </StyledMovieSummary>\n  );\n}\n","import styled, { css } from 'styled-components';\nimport { Rating } from 'components';\nimport { ProfileImage } from 'components/basic';\n\n\nexport const StyledSingleReview = styled.div`\n  --padding: 12px;\n  position: relative;\n  flex: 0 1 100px;\n  max-width: 100%;\n  align-items: center;\n  display: flex;\n  padding: var(--padding) 0;\n  ${props => `\n    border-top: 1px solid ${props.theme.disabled}38;\n    &:last-child {\n      border-bottom: 1px solid ${props.theme.disabled}38;\n    }\n  `};\n`;\n\nexport const AuthorsName = styled.p`\n  position: absolute;\n  left: 0;\n  bottom: var(--padding);\n  font-size: 0.9rem;\n  color: ${props => props.theme.onSurface};\n  \n  transition: transform 100ms;\n  &:hover {\n    transform: scale(1.05);\n    cursor: pointer;\n  }\n`;\n\nexport const ReviewContent = styled.p`\n  position: absolute;\n  left: 60px;\n  top: calc(var(--padding) - 5px);\n  width: auto;\n  height: calc(100% - (var(--padding) * 3) + 5px);\n  font-size: 0.70rem;\n  line-height: 1.05rem;\n  color: ${props => props.theme.onSurfaceMD};\n  \n  overflow-y: scroll;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n  &::-webkit-scrollbar {\n    width: 0px;\n    background: transparent; /* Disable scrollbar Chrome/Safari/Webkit */\n  }\n`;\n\nexport const ReviewRating = styled(Rating)`\n  position: absolute;\n  bottom: var(--padding);\n  right: 0;\n`;\n\nconst BaseImageStyle = css`\n  position: absolute;\n  top: var(--padding);\n  width: 50px;\n  max-width: 50px;\n  height: 50px;\n  max-height: 50px;\n  outline: 1px solid #E4E6E7;\n`\nexport const AuthorImage = styled.img`\n  ${BaseImageStyle};\n  \n  transition: opacity 100ms;\n  opacity: 0;\n  ${props => props.$fadeIn && 'opacity: 1'};\n`\n\nexport const OwnImage = styled(ProfileImage)`\n  ${BaseImageStyle};\n`;\n\nexport const DateCreated = styled.p`\n  position: absolute;\n  left: 0;\n  bottom: 2px;\n  font-size: 0.5rem;\n`;","import React, { useEffect, useState } from 'react';\nimport ResourcesAPI from 'api/ResourcesAPI';\nimport { IMAGE_BASE_PATH } from 'components/basic/ProfileImage';\nimport useFakePromise from 'hooks/useFakePromise';\nimport {\n  AuthorImage,\n  AuthorsName, DateCreated, OwnImage,\n  ReviewContent,\n  ReviewRating,\n  StyledSingleReview\n} from './SingleReviewStyles';\n\n\nconst SingleReview = ({ review: { comment, userRating, username, profileImage, createdTime }, isOwn }) => {\n  const fakePromise = useFakePromise();\n  const [userImage, setUserImage] = useState(null);\n\n  // TODO: Open profile page\n  function openProfile() {\n  \n  }\n  \n  useEffect(() => {\n  }, [userImage])\n  \n  useEffect(() => {\n    if (!fakePromise || isOwn) return;\n    if (!profileImage) {\n      const img = require('assets/profile/blank-profile.png');\n      setUserImage(img);\n      return;\n    }\n    const getResourcePromise = profileImage => ResourcesAPI.fetchResource(IMAGE_BASE_PATH + username + '/' + profileImage);\n    Promise.race([fakePromise, getResourcePromise(profileImage)]).then(res => {\n      console.group('gotcha');\n      console.log(res);\n      console.groupEnd();\n      if (!res) return;\n      const { data } = res;\n      setUserImage(data);\n    })\n  }, [fakePromise])\n  \n  return (\n    <StyledSingleReview\n    >\n      <AuthorsName\n        title='View profile'\n        onClick={openProfile}\n      >{username}</AuthorsName>\n      {isOwn\n        ? <OwnImage shape='rectangle'/>\n        : <AuthorImage\n          $fadeIn={!!userImage}\n          src={userImage}\n          alt={`profile image of ${username}`}\n        />\n      }\n      <ReviewContent>\n        {comment}\n      </ReviewContent>\n      <ReviewRating\n        rating={userRating}\n        maxStars={5}\n        starSize='18px'\n        color='onSurface'\n      />\n      {/*TODO: Recreate this */}\n      <DateCreated>{new Intl.DateTimeFormat('en', { year: 'numeric', month: 'short', day: '2-digit' }).format(createdTime)}</DateCreated>\n    </StyledSingleReview>\n  );\n};\n\nexport default SingleReview;","import styled from 'styled-components';\nimport { Card, Rating } from 'components';\nimport { Button, Input } from '../../../../components/basic';\nimport { L, lessThen } from '../../../../utils/mediaUtils';\n\nexport const StyledRatingSection = styled.div`\n  grid-area: 2 / 1 / 3 / 1;\n  position: relative;\n  top: -35px;\n  \n  max-width: 100%;\n  ${props => props.$oneColumn && `\n    grid-area: 3 / 1 / 4 / -1;\n    top: 0;\n  `};\n`;\n\nexport const ReviewsContainer = styled(Card)`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  max-width: 100%;\n`;\n\nexport const RateMovieBtn = styled(Rating)`\n  flex: 0 0 auto;\n  position: -webkit-sticky; /* Safari */\n  position: sticky;\n  top: -20px; // Counter the padding\n  margin-bottom: 15px;\n`;\n\nexport const NoReviewsText = styled.p`\n  width: 100%;\n  margin-top: 10px;\n  font-size: 0.9rem;\n  color: ${props => props.theme.onSurface};\n`;\n\nexport const RateDialogWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n ${p => lessThen(p.$device, L)\n  ? `\n    width: 70vw;\n    font-size: 0.8rem;\n  `\n  : `\n    width: 40vw;\n    font-size: 1rem;\n  `};\n`;\n\nexport const RateDialogTitle = styled.h3`\n  font-size: 1.1em;\n  color: ${p => p.theme.onSurface};\n  margin-bottom: 5px;\n`;\n\nexport const RateDialogActions = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const RateDialogAction = styled(Button)``\n\nexport const RateDialogInput = styled(Input)`\n  margin: 10px 0;\n`;\n","import React from 'react';\nimport { RateDialogAction, RateDialogActions, RateDialogInput, RateDialogTitle, RateDialogWrapper } from './styles';\nimport useDeviceDimensions from '../../../../hooks/useDeviceDimensions';\n\ninterface RateDialogProps {\n  title: string,\n  onCancel: () => void,\n  onConfirm: (review: string) => {},\n}\n\nconst RateDialog = (props: RateDialogProps) => {\n  const { device } = useDeviceDimensions();\n  return (\n    //@ts-ignore\n    <RateDialogWrapper $device={device}>\n      <RateDialogTitle>{props.title}</RateDialogTitle>\n      {/*@ts-ignore*/}\n      <RateDialogInput inputType='textarea' withCharacterCount\n                       label='Add review'\n                       helperText='Review text is optional' />\n      <RateDialogActions>\n        {/*@ts-ignore*/}\n        <RateDialogAction type='text' onClick={props.onCancel}>Cancel</RateDialogAction>\n        {/*// @ts-ignore*/}\n        <RateDialogAction type='contained' onClick={props.onConfirm}>Confirm</RateDialogAction>\n      </RateDialogActions>\n    </RateDialogWrapper>\n  );\n};\n\nexport default RateDialog;","import React, { useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { closeDialog, enqueueSnackbarMessage, openDialog, promptUser } from 'reducers/uiReducer';\nimport { getReviewsByMovie, rateMovie } from 'reducers/moviesReducer';\nimport { Loading } from 'components';\nimport SingleReview from './SingleReview';\nimport { CardTitle } from '../styles';\nimport { NoReviewsText, RateMovieBtn, ReviewsContainer, StyledRatingSection } from './styles';\nimport RateDialog from './RateDialog';\n\nconst selector = createSelector(\n  store => store.moviesReducer.selectedMovie.reviews,\n  store => store.moviesReducer.selectedMovie.reviewsLoading,\n  store => store.moviesReducer.selectedMovie.movieInfo.movieRating,\n  store => store.auth.loggedInUser,\n  (reviews, reviewsLoading, movieRating, loggedInUser) => ({\n      reviews, reviewsLoading, movieRating, isLoggedIn: loggedInUser !== null,\n      userId: loggedInUser.userId, username: loggedInUser.username\n  })\n);\nconst RatingSection = ({ movieName, movieId, oneColumn }) => {\n  const dispatch = useDispatch();\n  \n  const { isLoggedIn, movieRating, userId, username, reviews, reviewsLoading } = useSelector(selector);\n  \n  const [sortedReviews, setSortedReviews] = useState([]);\n  \n  useEffect(() => {\n    dispatch(getReviewsByMovie(movieId));\n  }, [])\n  \n  useEffect(() => {\n    if (isUserRated) {\n      const ownReview = reviews.filter(r => r.username === username);\n      const restReviews = reviews.filter(r => r.username !== username);\n      // TODO: Rework this with pagination\n      setSortedReviews([...ownReview, ...restReviews]);\n    }\n    else\n      setSortedReviews(reviews);\n  }, [reviews])\n  \n  const isUserRated = useMemo(() => isLoggedIn && reviews.some(r => r.username === username), [reviews]);\n  \n  async function doRate(review, rate) {\n    const { error } = await dispatch(rateMovie(movieId, userId, rate, review));\n    const message = error\n      ? `Error: ${error}`\n      : `Successfully rated ${movieName} with ${rate} stars`;\n    dispatch(enqueueSnackbarMessage(message, null, {\n      // Base theme error color doesnt contrast with snackbar background\n      useColor: error ? '#CF6679' : 'primary',\n    }));\n    // Fetch the new review\n    dispatch(getReviewsByMovie(movieId));\n  }\n  \n  function openRateDialog(rate) {\n    dispatch(openDialog(<RateDialog\n      title={`Rate with ${rate} stars`}\n      onCancel={() => dispatch(closeDialog())}\n      onConfirm={review => doRate(review, rate)} />))\n  }\n  \n  return (\n    <StyledRatingSection\n      $oneColumn={oneColumn}\n    >\n      <Loading isLoading={reviewsLoading} />\n      <CardTitle>\n        Reviews:\n      </CardTitle>\n      <ReviewsContainer>\n        <RateMovieBtn\n          id='movieRating'\n          title={isLoggedIn ? isUserRated ? 'You already rated this movie' : 'Rate movie' : 'You need to login to rate'}\n          rateable={isLoggedIn && !isUserRated}\n          onRate={openRateDialog}\n          maxStars={5}\n          rating={movieRating}\n          color={(!isLoggedIn || isUserRated) ? 'disabled' : 'primary'}\n        />\n        {!reviewsLoading && reviews.length === 0 && <NoReviewsText>Be the first to leave a review</NoReviewsText>}\n        {sortedReviews.map((review, index) => (\n          <SingleReview\n            key={`review_${index}`}\n            review={review}\n            isOwn={review.username === username}\n          />))}\n      </ReviewsContainer>\n    </StyledRatingSection>\n  );\n};\n\nexport default RatingSection;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { Card } from 'components';\n\nexport const SimilarMoviesContainer = styled(Card)`\n  grid-area: 5 / 1 / 5 / -1;\n  ${({ $oneColumn }) => $oneColumn && `\n    grid-area: 7 / 1 / 8 / -1;\n  `}\n  width: 100%;\n  height: 400px;\n  overflow: hidden;\n  color: ${props => props.theme.onSurface};\n  padding: 10px 10px 0;\n`;\n\nexport const MoreMoviesTitle = styled.h3`\n  text-align: center;\n  font-size: 1.2rem;\n  margin-bottom: 10px;\n`;\n\nexport const Movies = styled.div`\n  display: flex;\n  scroll-snap-type: x mandatory; // TODO: figure it out\n  overflow-x: auto; // TODO: Make this scrollable like genres or like a carousel\n`;\n\nexport const MovieLink = styled(Link)`\n  color: ${props => props.theme.onSurface};\n  margin: 0 10px;\n  scroll-snap-align: start;\n`;\n\nexport const MovieName = styled.h4`\n  font-size: 1rem;\n  margin: 5px 0;\n`;\n\nexport const MoviePoster = styled.img`\n  width: 300px;\n  height: 300px;\n`;\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport MovieAPI from 'api/MovieAPI';\nimport { API_URL } from 'api/BaseAPI';\nimport useFakePromise from 'hooks/useFakePromise';\nimport {\n  MoreMoviesTitle,\n  MovieLink, MovieName,\n  MoviePoster, Movies,\n  SimilarMoviesContainer,\n} from './styles';\n\nfunction promiseFunc(resolve, reject) {\n  return resolve;\n}\n\n/**\n * TODO: Currently we get similar movies by the genres of the current movie\n *  I need to implement some algorithm on backend\n */\nconst SimilarMovies = ({ movieId, oneColumn }) => {\n  const fakePromise = useFakePromise();\n  const [similarMovies, setSimilarMovies] = useState([]);\n\n  useEffect(() => {\n    if (!fakePromise)\n      return;\n    \n    const promiseWithEffect = () => MovieAPI.getSimilarMovies(movieId, 0, 10)\n    Promise.race([fakePromise, promiseWithEffect()])\n    .then(res => {\n      if (!res) return;\n      \n      const { data } = res;\n      setSimilarMovies(data);\n    })\n  }, [movieId, fakePromise])\n  \n  return (\n    <SimilarMoviesContainer\n      $oneColumn={oneColumn}\n    >\n      <MoreMoviesTitle>\n        Similar Movies:\n      </MoreMoviesTitle>\n      <Movies>\n        {similarMovies.map(({ id, movieName, posterName }) => (\n          <MovieLink key={id} to={`/movie/${id}`}>\n            <MovieName>{movieName}</MovieName>\n            <MoviePoster\n              src={`${API_URL}movies/poster/${posterName}`}\n              alt={movieName}\n            />\n          </MovieLink>\n        ))}\n      </Movies>\n    </SimilarMoviesContainer>\n  );\n};\n\nexport default SimilarMovies;\n","import styled from 'styled-components';\nimport { Card } from 'components';\n\nexport const GenresContainer = styled.div`\n  ${props => props.$oneColumn\n    ? `\n      grid-area: 5 / 1 / 6 / -1;\n    `\n    : `\n      grid-area: 4 / 1 / 5 / 1;\n      height: 200px;\n  `};\n  max-height: 200px;\n`;\n\n\nexport const GenresCard = styled(Card)`\n  display: flex;\n  flex-wrap: wrap;\n  height: 90%;\n  \n  & > * {\n    margin: 0 3px;\n  }\n`;","import React from 'react';\nimport { GenresCard, GenresContainer } from './styles';\nimport { Chip } from 'components/basic';\nimport { CardTitle } from '../styles';\n\nconst MovieGenres = ({ genres = [], oneColumn }) => {\n  return (\n    <GenresContainer\n      $oneColumn={oneColumn}\n    >\n      <CardTitle>Genres</CardTitle>\n      <GenresCard>\n        {genres.map((genre, index) => (\n          <Chip\n            key={`genre_${index}`}\n            selectable={false}\n            chipType='outlined'\n            color='primary'\n            chipText={genre}\n            closeable={false}\n          />\n        ))}\n      </GenresCard>\n    </GenresContainer>\n  );\n};\n\nexport default MovieGenres;","import styled from 'styled-components';\nimport { Card } from 'components';\n\nexport const CastContainer = styled.div`\n  ${props => props.$oneColumn\n  ? `\n    grid-area: 6 / 1 / 7 / -1;\n  `\n  : `\n    grid-area: 4 / 2 / 5 / -1;\n    height: 200px;\n  `};\n  max-height: 200px;\n`;\n\n\nexport const CastCard = styled(Card)`\n  height: 90%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const CastSection = styled.section`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  & > * {\n    margin: 5px 3px;\n  }\n`;\n\nexport const CastSectionTitle = styled.h4`\n  font-size: 1rem;\n  margin-right: 15px;\n  ${props => props.$oneColumn && `\n    margin-right: 5px;\n  `}\n  color: ${props => props.theme.primary};\n`;","import React from 'react';\nimport { CastCard, CastContainer, CastSection, CastSectionTitle, GenresCard, GenresContainer } from './styles';\nimport { Chip } from 'components/basic';\nimport { CardTitle } from '../styles';\n\nconst MovieCast = ({ actors = [], director, oneColumn }) => {\n  return (\n    <CastContainer\n      $oneColumn={oneColumn}\n    >\n      <CardTitle>Cast</CardTitle>\n      <CastCard>\n        {actors.length > 0 && (\n          <CastSection>\n            <CastSectionTitle $oneColumn={oneColumn}>Actors: </CastSectionTitle>\n            {actors.map((actor, index) => (\n              <Chip\n                key={`actor_${index}`}\n                selectable={false}\n                chipType='outlined'\n                color='primary'\n                chipText={actor}\n                closeable={false}\n                style={{ marginBottom: '2px'}}\n              />\n            ))}\n          </CastSection>\n        )}\n        {director && (\n          <CastSection>\n            <CastSectionTitle $oneColumn={oneColumn} >Director: </CastSectionTitle>\n            <Chip\n              selectable={false}\n              chipText={director}\n              chipType='outlined'\n              closeable={false}\n              color='primary'\n            />\n          </CastSection>\n        )}\n      </CastCard>\n    </CastContainer>\n  );\n};\n\nexport default MovieCast;","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Loading, Rating } from 'components';\nimport { API_URL } from 'api/BaseAPI';\nimport { fetchSingleMovie, updateFilter, clearSingleMovie } from 'reducers/moviesReducer';\nimport useDeviceDimensions from 'hooks/useDeviceDimensions';\nimport { L, lessThen } from 'utils/mediaUtils';\nimport MovieSummary from './MovieSummary';\nimport RatingSection from './RatingSection';\nimport SimilarMovies from './SimilarMovies';\nimport MovieGenres from './MovieGenres';\nimport MovieCast from './MovieCast';\nimport {\n  MovieTitle,\n  SingleMovieWrapper,\n  MovieVideoContainer,\n} from './styles';\n\nconst MOVIE_RATIO = 16 / 10;\nconst BASE_POSTER_URL = API_URL + 'movies/single/hdPoster/';\nconst SingleMovie = ({ match: { params }, history }) => {\n  const dispatch = useDispatch();\n  // Ref of the previous filtered genres, to restore after unmunting\n  const prevGenres = React.useRef({ current: [] });\n  const { movieId } = params;\n  \n  const { width: screenWidth, device } = useDeviceDimensions('SingleMovie');\n  const isSingleColumn = useMemo(() => lessThen(device, L), [screenWidth]);\n  \n  const { selectedMovie, previousGenres, isLoading } = useSelector(\n    ({ moviesReducer: { selectedMovie, filters: { genres } } }) => ({\n      selectedMovie: selectedMovie.movieInfo,\n      previousGenres: genres,\n      isLoading: selectedMovie.isLoading,\n    }));\n  \n  useEffect(() => {\n    prevGenres.current = previousGenres;\n    dispatch(updateFilter({ genres: movieGenres }));\n    return () => dispatch(updateFilter({ genres: prevGenres.current }));\n  }, []);\n  \n  useEffect(() => {\n    dispatch(clearSingleMovie())\n    dispatch(fetchSingleMovie(movieId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [movieId]);\n  \n  const {\n    posterName, movieSummary, directorName,\n    actorNames = [], movieYear, movieViews,\n    movieName, movieGenres,\n  } = selectedMovie;\n  \n  \n  return (\n    <>\n      <Loading isLoading={!screenWidth || !posterName || isLoading}/>\n      <SingleMovieWrapper\n        fadeIn={!isLoading}\n        $oneColumn={isSingleColumn}\n      >\n        {(!!screenWidth && !!posterName && !isLoading) && (\n          <>\n            <MovieTitle $oneColumn={isSingleColumn}>\n              <h2>{movieName}</h2>\n            </MovieTitle>\n            <MovieVideoContainer\n              $oneColumn={isSingleColumn}\n            >\n              <video\n                width={isSingleColumn ? screenWidth - 30 : screenWidth / 1.5}\n                height={isSingleColumn ? (screenWidth - 30) / MOVIE_RATIO : (screenWidth / 1.5) / MOVIE_RATIO}\n                controls\n                poster={BASE_POSTER_URL + posterName}\n                // onCanPlay={() => forceRender(true)}\n                // onLoadStart={() => console.log('ONLOAD_START')}\n              >\n                <source src={`${API_URL}stream/mp4/Kenpachi`} type=\"video/mp4\"/>\n              </video>\n            </MovieVideoContainer>\n            <MovieSummary\n              oneColumn={isSingleColumn}\n              summary={movieSummary}\n            />\n            <RatingSection\n              movieId={movieId}\n              movieName={movieName}\n              oneColumn={isSingleColumn}\n            />\n            <MovieGenres\n              genres={movieGenres}\n              oneColumn={isSingleColumn}\n            />\n            <MovieCast\n              oneColumn={isSingleColumn}\n              actors={actorNames}\n              director={directorName}\n            />\n            <SimilarMovies\n              oneColumn={isSingleColumn}\n              movieId={movieId}\n            />\n          </>\n        )\n        }\n      </SingleMovieWrapper>\n    </>\n  );\n};\n\nexport default withRouter(SingleMovie);\n","import React from 'react'\nimport SingleMovie from 'modules/movies/SingleMovie';\nimport styled from 'styled-components';\n\nconst SingleMoviePage = () => (\n  // <FadePage>\n    <SingleMovie />\n  // </FadePage>\n);\n\nexport default SingleMoviePage;\n\n// TODO: Fix transition-group for routes\nconst FadePage = styled.div`\n  animation: appear 1s linear;\n  \n  @keyframes appear {\n    0% {\n     opacity: 0;\n    }\n    50% {\n      opacity: 0.3;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n`;\n"],"sourceRoot":""}